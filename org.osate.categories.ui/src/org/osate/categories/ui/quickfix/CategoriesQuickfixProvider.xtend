/**
 * Copyright 2015 Carnegie Mellon University. All Rights Reserved.
 *
 * NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE
 * MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO
 * WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING,
 * BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY,
 * EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON
 * UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM
 * PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
 *
 * Released under the Eclipse Public License (http://www.eclipse.org/org/documents/epl-v10.php)
 *
 * See COPYRIGHT file for full details.
 */

/*
* generated by Xtext
*/
package org.osate.categories.ui.quickfix

import org.eclipse.xtext.ui.editor.model.edit.IModification
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.validation.Issue
import org.osate.categories.validation.CategoriesValidator

/**
 * Custom quickfixes.
 *
 * see http://www.eclipse.org/Xtext/documentation.html#quickfixes
 */
class CategoriesQuickfixProvider extends DefaultQuickfixProvider {//org.osate.alisa.common.ui.quickfix.CommonQuickfixProvider {
	
	/**
	 * QuickFix for removing a duplicated Category
	 * The issue data array is expected to have two elements:
	 *
	 * issue.getData()[0]: The Category type
	 * issue.getData()[1]: The offset of the Category
	 * issue.getData()[2]: The length of the Category
	 * 
	 */
	@Fix(CategoriesValidator.DUPLICATE_CATEGORY)
	def public void fixDuplicateCategory(Issue issue, IssueResolutionAcceptor acceptor) {
		val catType = issue.data.head
		val offset = Integer.parseInt(issue.data.get(1))
		val length = Integer.parseInt(issue.data.get(2))

		acceptor.accept(issue, "Remove this duplicate " + catType, null, null, 
			new IModification() {
				override public void apply(IModificationContext context) throws Exception {
					context.getXtextDocument().replace(offset, length, "");
			}
		});
	}


}
