package queuing
public
	system s1
	end s1;
	
	system implementation s1.i1
		subcomponents
			sub1: abstract a1;
			sub2: abstract a2;
			sub3: abstract a3;
			sub4: abstract a2 {Dispatch_Protocol => Sporadic;};
			sub5: abstract a2 {Dispatch_Protocol => Periodic;};
		connections
			conn1: feature sub1.f1 -> sub2.f2;
			conn2: feature sub1.f1 -> sub3.f3;
			conn3: feature sub1.f1 -> sub4.f2;
			conn4: feature sub1.f1 -> sub5.f2;
		flows
			etef1: end to end flow sub1.fsource1 -> conn1 -> sub2.fsink1;
			etef2: end to end flow sub1.fsource1 -> conn2 -> sub3.fsink2;
			etef3: end to end flow sub1.fsource1 -> conn3 -> sub4.fsink1;
			etef4: end to end flow sub1.fsource1 -> conn4 -> sub5.fsink1;
	end s1.i1;
	
	abstract a1
		features
			f1: feature;
		flows
			fsource1: flow source f1;
	end a1;
	
	abstract a2
		features
			f2: in event port {Queue_Size => 1;};
		flows
			fsink1: flow sink f2;
	end a2;
	
	abstract a3
		features
			f3: in event port {Queue_Size => 0;};
		flows
			fsink2: flow sink f3;
	end a3;
end queuing;